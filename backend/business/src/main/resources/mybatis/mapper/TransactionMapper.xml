<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.perfect.team.business.mapper.TransactionMapper">

    <resultMap id="transactionResultMap" type="Transaction">
        <id property="id" column="id"/>
        <result property="value" column="value"/>
        <result property="note" column="note"/>
        <result property="date" column="date"/>
        <association property="account" column="account_id" foreignColumn="id" columnPrefix="account_"
                     resultMap="com.perfect.team.business.mapper.AccountMapper.accountResultMap"/>
        <association property="category" column="category_id" foreignColumn="id" columnPrefix="category_"
                     resultMap="com.perfect.team.business.mapper.CategoryMapper.categoryResultMap"/>
        <association property="user" column="user_id" foreignColumn="id" columnPrefix="user_"
                     resultMap="com.perfect.team.business.mapper.UserMapper.userResultMap"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO transaction (date, note, value, account_id, category_id, user_id)
        VALUES (#{date}, #{note}, #{value}, #{account.id}, #{category.id}, #{user.id})
    </insert>

    <select id="select" resultMap="transactionResultMap">
        SELECT
            t.id,
            t.date,
            t.note,
            t.value,
            t.account_id,
            t.category_id,
            t.user_id,
            c.name             AS category_name,
            c.icon             AS category_icon,
            c.user_id          AS category_user_id,
            c.category_type_id AS category_category_type_id,
            ct.name            AS category_type_name,
            ct.balance_type    AS category_type_balance_type
        FROM transaction t
            LEFT JOIN category c ON t.category_id = c.id
            LEFT JOIN category_type ct ON c.category_type_id = ct.id
        WHERE t.id = #{id}
    </select>

    <update id="update" useGeneratedKeys="true" keyProperty="id">
        UPDATE transaction
        <set>
            <if test="value != null">value = #{value},</if>
            <if test="note != null">note = #{note},</if>
            <if test="date != null">date = #{date},</if>
            <if test="category.id != null">category_id = #{category.id},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM transaction
        WHERE id = #{id}
    </delete>

    <select id="selectAll" resultMap="transactionResultMap">
        SELECT
            t.id,
            t.date,
            t.note,
            t.value,
            t.account_id,
            t.category_id,
            t.user_id,
            c.name             AS category_name,
            c.icon             AS category_icon,
            c.user_id          AS category_user_id,
            c.category_type_id AS category_category_type_id,
            ct.name            AS category_type_name,
            ct.balance_type    AS category_type_balance_type
        FROM transaction t
            LEFT JOIN category c ON t.category_id = c.id
            LEFT JOIN category_type ct ON c.category_type_id = ct.id
    </select>

    <select id="selectWithFull" resultMap="transactionResultMap">
        SELECT
            t.id,
            t.date,
            t.note,
            t.value,
            t.account_id,
            t.category_id,
            t.user_id,
            c.name             AS category_name,
            c.icon             AS category_icon,
            c.user_id          AS category_user_id,
            c.category_type_id AS category_category_type_id,
            ct.name            AS category_type_name,
            ct.balance_type    AS category_type_balance_type
        FROM transaction t
            LEFT JOIN account a ON t.account_id = a.id
            LEFT JOIN category c ON t.category_id = c.id
            LEFT JOIN category_type ct ON c.category_type_id = ct.id
            LEFT JOIN user u ON t.user_id = u.id
        WHERE t.id = #{id}
    </select>

    <select id="selectAllByUserId" resultMap="transactionResultMap">
        SELECT
            t.id,
            t.date,
            t.note,
            t.value,
            t.account_id,
            t.category_id,
            t.user_id,
            c.name             AS category_name,
            c.icon             AS category_icon,
            c.user_id          AS category_user_id,
            c.category_type_id AS category_category_type_id,
            ct.name            AS category_type_name,
            ct.balance_type    AS category_type_balance_type
        FROM transaction t
            LEFT JOIN category c ON t.category_id = c.id
            LEFT JOIN category_type ct ON c.category_type_id = ct.id
        WHERE t.user_id = #{userId}
    </select>
</mapper>
